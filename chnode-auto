#!/usr/bin/env false
. "$(dirname "$0")/chnode"

unset CHNODE_AUTO_VERSION

chnode-auto() {
  local old_="$1" #  https://github.com/postmodern/chruby/pull/381
  local dir="$PWD/" version

  until [ -z "$dir" ]; do
    dir="${dir%/*}"

    if { read -r version < "$dir/.node-version" ||
         read -r version < "$dir/.nvmrc"; } 2>/dev/null; then
      version="${version%%[[:space:]]}"
      if [ -n "$version" ]; then
        test "$version" = "$CHNODE_AUTO_VERSION" && return
        export CHNODE_AUTO_VERSION="$version"
        chnode "$version"
        return $?
      fi
    fi
    : "$old_"
  done

  if [ -n "$CHNODE_AUTO_VERSION" ]; then
    chnode system
    unset CHNODE_AUTO_VERSION
  fi
}

if [ -n "$ZSH_VERSION" ]; then
  if [[ "$preexec_functions" != *chnode-auto* ]]; then
    preexec_functions+=("chnode-auto")
  fi
elif [ -n "$BASH_VERSION" ]; then
  CHNODE_AUTO_TRAP='local [[ "$BASH_COMMAND" != "$PROMPT_COMMAND" ]] && chnode-auto "$_"'
  if [[ "$(trap -p DEBUG)" =~ DEBUG ]]; then
    if ! [[ "$(trap -p DEBUG)" =~ "$CHNODE_AUTO_TRAP" ]]; then
      unset CHNODE_AUTO_TRAP
      echo 'chnode-auto cannot be installed - DEBUG trap already set' >&2
      return 1
    fi
  fi
  trap "$CHNODE_AUTO_TRAP" DEBUG
  unset CHNODE_AUTO_TRAP
else
  echo "Unsupported shell $SHELL"
  return 1
fi

chnode-auto
